{"version":3,"sources":["Components/CurrencyConverter.jsx","Components/Projects.jsx","App.js","reportWebVitals.js","index.js"],"names":["CurrencyConverter","props","state","currencies","currencyFrom","currencyTo","amountFrom","amountTo","handleSelect","bind","handleSubmit","handleInput","event","preventDefault","console","log","Axios","get","apiAddress","then","response","fromRate","data","rates","toRate","conversion","setState","toFixed","target","name","value","this","onSubmit","onChange","map","index","type","Component","Projects","handleCurrencyCalulator","currencyCalculator","keyMapper","workFlowBoard","handleKeyMapper","handleWorkFlowBoard","displayActiveProject","className","onClick","React","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4affdeaf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\n\r\nclass CurrencyConverter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { currencies: [\"AUD\", \"USD\", \"EUR\", \"GBP\"], currencyFrom: \"AUD\", currencyTo: \"AUD\", amountFrom: 0, amountTo: 0 }\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n\r\n        \r\n    }\r\n    \r\n\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(event);\r\n        //fixer.io api key\r\n        const apiKey = \"12980df91b59f4a5256ec5001c31178f\";\r\n\r\n        let apiAddress = \"http://data.fixer.io/api/latest\";\r\n        let requestAddress = apiAddress + \"?access_key=\" + apiKey;\r\n        Axios.get(requestAddress).then((response) => {\r\n            //console.log(response.data.rates);\r\n            let fromRate = response.data.rates[this.state.currencyFrom];\r\n            let toRate = response.data.rates[this.state.currencyTo];\r\n            //returned values are conversion to euro due to api restrictions\r\n            let euro =  this.state.amountFrom / fromRate;\r\n            let conversion = euro * toRate;\r\n            this.setState({ amountTo: conversion.toFixed(3) })\r\n        });\r\n    }\r\n\r\n    handleSelect(event) {\r\n        console.log(event.target.name, event.target.value);\r\n        this.setState({ [event.target.name]: event.target.value });\r\n\r\n    }\r\n\r\n    handleInput(event) {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>Select current currency</label><br />\r\n                <select name=\"currencyFrom\" value={this.state.currencyFrom} onChange={this.handleSelect}>\r\n                    {this.state.currencies.map((name, index) => {\r\n                        return <option key={index} value={name} >{name}</option>\r\n                    })}\r\n                </select><br />\r\n\r\n                <input type=\"number\" name=\"amountFrom\" onChange={this.handleInput}></input> <br />\r\n                <label>Select target currency</label> <br />\r\n                <select name=\"currencyTo\" value={this.state.currencyTo} onChange={this.handleSelect}>\r\n                    {this.state.currencies.map((name, index) => {\r\n                        return <option key={index} value={name} >{name}</option>\r\n                    })}\r\n                </select><br />\r\n\r\n                <input type=\"submit\" value=\"Convert\" onChange={this.handleInput} /><br />\r\n                <label>Converted Amount:</label> <br />\r\n                <div type=\"number\" name=\"amountFrom\" onChange={this.handleInput}>${this.state.amountTo}</div>\r\n            </form >\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrencyConverter;","import React from 'react';\r\nimport CurrencyConverter from './CurrencyConverter';\r\nclass Projects extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currencyCalculator: false,\r\n            keyMapper: false,\r\n            workFlowBoard: false\r\n        }\r\n    }\r\n    handleCurrencyCalulator = () => {\r\n        this.setState({\r\n            currencyCalculator: true,\r\n            keyMapper: false,\r\n            workFlowBoard: false\r\n        })\r\n    }\r\n\r\n    handleKeyMapper = () => {\r\n        this.setState({\r\n            currencyCalculator: false,\r\n            keyMapper: true,\r\n            workFlowBoard: false\r\n        })\r\n    }\r\n\r\n    handleWorkFlowBoard = () => {\r\n        this.setState({\r\n            currencyCalculator: false,\r\n            keyMapper: false,\r\n            workFlowBoard: true\r\n        })\r\n    }\r\n    displayActiveProject = () => {\r\n        if (this.state.currencyCalculator){\r\n            return (\r\n                <>\r\n                    <h1>CurrencyCalculator On</h1>\r\n                    <CurrencyConverter/>\r\n                </>\r\n            )\r\n        }\r\n        else if(this.state.keyMapper){\r\n            return <h1>KeyMapper On</h1>\r\n        }\r\n        else if(this.state.workFlowBoard){\r\n            return <h1>WorkFlowBoard On</h1>\r\n        }\r\n        else{\r\n            return <h1>Nothing selected</h1>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <div className=\"tabs is-centered\">\r\n                <ul>\r\n                    <li className={this.state.currencyCalculator ? \"is-active\" : \"\"} onClick={this.handleCurrencyCalulator}><a>Currency Calculator</a></li>\r\n                    <li className={this.state.keyMapper ? \"is-active\" : \"\"} onClick={this.handleKeyMapper}><a>Key Mapper</a></li>\r\n                    <li className={this.state.workFlowBoard ? \"is-active\" : \"\"} onClick={this.handleWorkFlowBoard}><a>Work Flow Board</a></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"is-centered\">\r\n                {this.displayActiveProject()}\r\n            </div>\r\n            \r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;\r\n","import './App.css';\nimport Projects from './Components/Projects'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"welcome-content mt-5\">\n          <h1>Hello World</h1>\n          <h2>Welcome to by portfolio site.  Please see below some client side examples of React. </h2>\n        </div>\n        <Projects/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}