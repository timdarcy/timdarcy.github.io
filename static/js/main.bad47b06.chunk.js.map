{"version":3,"sources":["Components/CurrencyConverter.jsx","Components/KeyMapper.jsx","Components/WorkflowBoard/LaneModal.jsx","Components/WorkflowBoard/CardModal.jsx","Components/WorkflowBoard/WorkflowCard.jsx","Components/WorkflowBoard/WorkflowLane.jsx","Components/WorkflowBoard/WorkflowBoard.jsx","Components/Redux/store.js","Components/Redux/reducers.js","Components/Projects.jsx","App.js","reportWebVitals.js","index.js"],"names":["CurrencyConverter","props","state","currencies","currencyFrom","currencyTo","amountFrom","amountTo","handleSelect","bind","handleSubmit","handleInput","Axios","get","then","response","setState","rates","data","baseCurrency","base","Object","keys","sort","event","preventDefault","fromRate","this","baseValue","toFixed","conversion","console","log","target","name","value","onSubmit","onChange","map","index","type","step","Component","KeyMapper","document","onkeydown","keyDown","keyPress","code","keyCode","keyLocation","location","nativeKeyCode","which","className","React","LaneModal","isOpen","onClick","handleClose","initialValues","laneValues","values","updateLaneValues","htmlFor","id","CardModal","modal","cardValues","updateCardValues","as","WorkflowCard","handleUpdateCardValues","newCard","card","title","content","updateCard","handleModalOpen","showEditModal","handleModalClose","handleCardDelete","deleteCard","laneId","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","connect","dispatch","updatedCard","cardId","WorkflowLane","handleTitleChange","newLane","lane","updateLane","handleAddCard","showCardModal","handleCardModalClose","addNewCard","handleEditLane","showLaneModal","handleLaneModalClose","handleUpdateLaneValues","handleDeleteLane","deleteLane","droppableId","droppableProps","cards","placeholder","updatedLane","WorkflowBoard","onDragEnd","result","destination","source","startLane","lanes","endLane","newCardIds","Array","from","cardIds","splice","newState","updateState","startLaneIds","newStartLane","endLaneIds","newEndLane","newLaneOrder","laneOrder","handleAddLane","showNewLaneModal","handleNewLaneModalClose","addNewLane","direction","store","createStore","action","undefined","deepCopyState","originalState","lodash","uuidv4","push","indexOf","createNewLane","laneIndex","Projects","handleCurrencyCalulator","currencyCalculator","keyMapper","workFlowBoard","handleKeyMapper","handleWorkFlowBoard","displayActiveProject","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kQAGqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAY,CAAC,OACbC,aAAc,MACdC,WAAY,MACZC,WAAY,EACZC,SAAU,GAEd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAXJ,E,gEAeC,IAAD,OAIfG,IAAMC,IAFW,0CAESC,MAAK,SAACC,GAC5B,EAAKC,SAAS,CACVC,MAAOF,EAASG,KAAKD,MACrBE,aAAcJ,EAASG,KAAKE,KAC5BjB,WAAYkB,OAAOC,KAAKP,EAASG,KAAKD,OAAOM,c,mCAM5CC,GACTA,EAAMC,iBAEN,IAAIC,EAAWC,KAAKzB,MAAMe,MAAMU,KAAKzB,MAAME,cACvCwB,EAAaD,KAAKzB,MAAMI,WAAaoB,EACzC,GAAIC,KAAKzB,MAAMG,aAAesB,KAAKzB,MAAMiB,aACrCQ,KAAKX,SAAS,CAAET,SAAUqB,EAAUC,QAAQ,SAE5C,CACA,IACIC,EAAaF,EADJD,KAAKzB,MAAMe,MAAMU,KAAKzB,MAAMG,YAEzCsB,KAAKX,SAAS,CAAET,SAAUuB,EAAWD,QAAQ,Q,mCAKxCL,GACTO,QAAQC,IAAIR,EAAMS,OAAOC,KAAMV,EAAMS,OAAOE,OAC5CR,KAAKX,SAAL,eAAiBQ,EAAMS,OAAOC,KAAOV,EAAMS,OAAOE,U,kCAI1CX,GACRG,KAAKX,SAAL,eAAiBQ,EAAMS,OAAOC,KAAOV,EAAMS,OAAOE,U,+BAGlD,OACI,uBAAMC,SAAUT,KAAKjB,aAArB,UACI,4DAAsC,uBACtC,wBAAQwB,KAAK,eAAeC,MAAOR,KAAKzB,MAAME,aAAciC,SAAUV,KAAKnB,aAA3E,SACKmB,KAAKzB,MAAMC,WAAWmC,KAAI,SAACJ,EAAMK,GAC9B,OAAO,wBAAoBJ,MAAOD,EAA3B,SAAmCA,GAAtBK,QAEnB,uBAET,uBAAOC,KAAK,SAASN,KAAK,aAAaO,KAAK,MAAMJ,SAAUV,KAAKhB,cARrE,IAQoF,uBAChF,2DATJ,IAS0C,uBACtC,wBAAQuB,KAAK,aAAaC,MAAOR,KAAKzB,MAAMG,WAAYgC,SAAUV,KAAKnB,aAAvE,SACKmB,KAAKzB,MAAMC,WAAWmC,KAAI,SAACJ,EAAMK,GAC9B,OAAO,wBAAoBJ,MAAOD,EAA3B,SAAmCA,GAAtBK,QAEnB,uBAET,uBAAOC,KAAK,SAASL,MAAM,UAAUE,SAAUV,KAAKhB,cAAe,uBACnE,sDAjBJ,IAiBqC,uBACjC,sBAAK6B,KAAK,SAASN,KAAK,aAAaG,SAAUV,KAAKhB,YAApD,cAAmEgB,KAAKzB,MAAMK,mB,GA3E/CmC,aCA1BC,E,kDACjB,WAAY1C,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,GAFC,E,gEAKE,IAAD,OACf0C,SAASC,UAAY,SAACC,GAElBA,EAAQrB,iBACR,EAAKT,SAAS,CACV+B,SAAUD,EAAQE,KAClBC,QAASH,EAAQG,QACjBC,YAAaJ,EAAQK,SACrBC,cAAeN,EAAQO,W,+BAM/B,OACI,mCACI,8BACQ,sBAAKC,UAAU,gBAAf,UACI,oBAAIA,UAAU,gBAAd,yBACA,wBAAOA,UAAU,QAAjB,UACI,+BACI,0CACA,6BAAK3B,KAAKzB,MAAM6C,cAEpB,+BACI,yCACA,6BAAKpB,KAAKzB,MAAM+C,aAEpB,+BACI,6CACA,6BAAKtB,KAAKzB,MAAMgD,iBAEpB,+BACI,0CACA,6BAAKvB,KAAKzB,MAAMkD,iC,GAxCbG,IAAMb,W,uBCAxBc,E,kDACjB,WAAYvD,GAAO,uCACTA,G,qDAGD,IAAD,OACJ,OACI,sBAAKqD,UAAS,gBAAW3B,KAAK1B,MAAMwD,OAAS,YAAc,IAA3D,UACI,qBAAKH,UAAU,mBAAmBI,QAAS/B,KAAK1B,MAAM0D,cACtD,sBAAKL,UAAU,aAAf,UACI,wBAAQA,UAAU,kBAAlB,SACI,mBAAGA,UAAU,mBAAb,yBAGJ,cAAC,IAAD,CACIM,cAAejC,KAAK1B,MAAM4D,WAC1BzB,SAAU,SAAC0B,GACP,EAAK7D,MAAM8D,iBAAiBD,GAC5B,EAAK7D,MAAM0D,eAJnB,SAQA,eAAC,IAAD,WACI,0BAASL,UAAU,kBAAnB,UACQ,uBAAOU,QAAQ,QAAf,mBACA,cAAC,IAAD,CAAOC,GAAG,QAAQzB,KAAK,OAAON,KAAK,aAE3C,mCACI,wBAAQM,KAAK,SAASc,UAAU,oBAAhC,0BACA,wBAAQA,UAAU,SAASI,QAAS/B,KAAK1B,MAAM0D,YAA/C,sC,GA7BWJ,IAAMb,WCAxBwB,E,kDACjB,WAAYjE,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTiE,OAAO,GAHG,E,qDAOT,IAAD,OACJ,OACI,sBAAKb,UAAS,gBAAW3B,KAAK1B,MAAMwD,OAAS,YAAc,IAA3D,UACI,qBAAKH,UAAU,mBAAmBI,QAAS/B,KAAK1B,MAAM0D,cACtD,sBAAKL,UAAU,aAAf,UACI,wBAAQA,UAAU,kBAAlB,SACI,mBAAGA,UAAU,mBAAb,yBAGJ,cAAC,IAAD,CACIM,cAAejC,KAAK1B,MAAMmE,WAC1BhC,SAAU,SAAC0B,GACP,EAAK7D,MAAMoE,iBAAiBP,GAC5B,EAAK7D,MAAM0D,eAJnB,SAQA,eAAC,IAAD,WACI,0BAASL,UAAU,kBAAnB,UACQ,uBAAOU,QAAQ,QAAf,mBACA,cAAC,IAAD,CAAOC,GAAG,QAAQzB,KAAK,OAAON,KAAK,UACnC,uBAAO8B,QAAQ,UAAf,qBACA,cAAC,IAAD,CAAOC,GAAG,UAAUK,GAAG,WAAWpC,KAAK,eAE/C,mCACI,wBAAQM,KAAK,SAASc,UAAU,oBAAhC,0BACA,wBAAQA,UAAU,SAASI,QAAS/B,KAAK1B,MAAM0D,YAA/C,sC,GAlCWJ,IAAMb,W,QCEvC6B,E,kDACF,WAAYtE,GAAO,IAAD,8BACd,cAAMA,IAMVuE,uBAAyB,SAACV,GACtB,IAAIW,EAAO,2BACJ,EAAKxE,MAAMyE,MADP,IAEPC,MAAOb,EAAOa,MACdC,QAASd,EAAOc,UAEpB,EAAK3E,MAAM4E,WAAWJ,IAbR,EAelBK,gBAAkB,WACd,EAAK9D,SAAS,CACV+D,eAAe,KAjBL,EAoBlBC,iBAAmB,WACf,EAAKhE,SAAS,CACV+D,eAAe,KAtBL,EAyBlBE,iBAAmB,WACf,EAAKhF,MAAMiF,WAAW,EAAKjF,MAAMyE,KAAKT,GAAI,EAAKhE,MAAMkF,SAxBrD,EAAKjF,MAAQ,CACT6E,eAAe,GAHL,E,qDA6BT,IAAD,OACJ,OACI,qCACI,cAAC,IAAD,CACIK,YAAazD,KAAK1B,MAAMyE,KAAKT,GAC7B1B,MAAOZ,KAAK1B,MAAMsC,MAFtB,SAIK,SAAC8C,EAAUC,GAAX,OACG,0DACIC,IAAKF,EAASG,UACVH,EAASI,gBACTJ,EAASK,iBAHjB,cAKI,mBAAGpC,UAAU,SAASI,QAAS,EAAKuB,mBACpC,6BAAK,EAAKhF,MAAMyE,KAAKC,QACrB,4BAAI,EAAK1E,MAAMyE,KAAKE,UACpB,wBAAQtB,UAAU,wCAAwCI,QAAS,EAAKoB,gBAAxE,yBAKZ,cAAC,EAAD,CACIrB,OAAQ9B,KAAKzB,MAAM6E,cACnBpB,YAAahC,KAAKqD,iBAClBZ,WAAY,CAAEO,MAAOhD,KAAK1B,MAAMyE,KAAKC,MAAOC,QAASjD,KAAK1B,MAAMyE,KAAKE,SACrEP,iBAAkB1C,KAAK6C,gC,GAvDhBjB,IAAMb,WAuElBiD,cACX,MATuB,SAACC,GACxB,MAAO,CACHf,WAAY,SAACgB,GAAD,OAAiBD,EAAS,CAAEpD,KAAM,cAAeqD,iBAC7DX,WAAY,SAACY,EAAQX,GAAT,OAAoBS,EAAS,CAAEpD,KAAM,cAAesD,SAAQX,eAKjEQ,CAGbpB,GCxEIwB,E,kDACF,WAAY9F,GAAO,IAAD,8BACd,cAAMA,IAOV+F,kBAAoB,SAACxE,GACjB,IAAIyE,EAAO,2BACJ,EAAKhG,MAAMiG,MADP,kBAEN,QAAU1E,EAAMS,OAAOE,QAE5B,EAAKlC,MAAMkG,WAAWF,IAbR,EAgBlBG,cAAgB,WACZ,EAAKpF,SAAS,CACVqF,eAAe,KAlBL,EAsBlBC,qBAAuB,WACnB,EAAKtF,SAAS,CACVqF,eAAe,KAxBL,EA2BlB7B,uBAAyB,SAACV,GACtB,EAAK7D,MAAMsG,WAAW,EAAKtG,MAAMiG,KAAKjC,GAAIH,IA5B5B,EA8BlB0C,eAAiB,WACb,EAAKxF,SAAS,CACVyF,eAAe,KAhCL,EAmClBC,qBAAuB,WACnB,EAAK1F,SAAS,CACVyF,eAAe,KArCL,EAyClBE,uBAAyB,SAAC7C,GACtB,IAAImC,EAAO,2BACJ,EAAKhG,MAAMiG,MADP,IAEPvB,MAAOb,EAAOa,QAElB,EAAK1E,MAAMkG,WAAWF,IA9CR,EAiDlBW,iBAAmB,WACf,EAAK3G,MAAM4G,WAAW,EAAK5G,MAAMiG,KAAKjC,KAhDtC,EAAK/D,MAAQ,CACTmG,eAAe,EACfI,eAAe,GAJL,E,qDAqDR,IAAD,OACL,OACI,qCACI,cAAC,IAAD,CACIrB,YAAazD,KAAK1B,MAAMiG,KAAKjC,GAC7B1B,MAAOZ,KAAK1B,MAAMsC,MAFtB,SAIK,SAAC8C,GAAD,OACG,8CAAK/B,UAAU,sBACP+B,EAASI,gBADjB,IAEIF,IAAKF,EAASG,SAFlB,UAII,iDAAQlC,UAAU,eAAkB+B,EAASK,iBAA7C,cACI,mBAAGpC,UAAU,SAASI,QAAS,EAAKkD,mBACpC,6BAAK,EAAK3G,MAAMiG,KAAKvB,YAIzB,cAAC,IAAD,CACImC,YAAa,EAAK7G,MAAMiG,KAAKjC,GAC7BzB,KAAK,OAFT,SAIK,SAAC6C,EAAUC,GAAX,OACG,qCACI,8CAAKhC,UAAU,WACXiC,IAAKF,EAASG,UACVH,EAAS0B,gBAFjB,cAKK,EAAK9G,MAAM+G,MAAM1E,KAAI,SAACoC,EAAMnC,GAAP,OAAiB,cAAC,EAAD,CAA4BmC,KAAMA,EAAMnC,MAAOA,EAAO4C,OAAQ,EAAKlF,MAAMiG,KAAKjC,IAA3DS,EAAKT,OAC9DoB,EAAS4B,gBAEd,wBAAQ3D,UAAU,qCAAqCI,QAAS,EAAK0C,cAArE,sBACA,wBAAQ9C,UAAU,wCAAwCI,QAAS,EAAK8C,eAAxE,oCASxB,cAAC,EAAD,CACI/C,OAAQ9B,KAAKzB,MAAMmG,cACnB1C,YAAahC,KAAK2E,qBAClBlC,WAAY,CAAEO,MAAO,GAAIC,QAAS,IAClCP,iBAAkB1C,KAAK6C,yBAE3B,cAAC,EAAD,CACIf,OAAQ9B,KAAKzB,MAAMuG,cACnB9C,YAAahC,KAAK+E,qBAClB7C,WAAY,CAAEc,MAAOhD,KAAK1B,MAAMiG,KAAKvB,OACrCZ,iBAAkBpC,KAAKgF,gC,GA1GhBpD,IAAMb,WA6HlBiD,cACX,MAVuB,SAACC,GACxB,MAAO,CACHO,WAAY,SAACe,GAAD,OAAiBtB,EAAS,CAAEpD,KAAM,cAAe0E,iBAC7DX,WAAY,SAACpB,EAAQrB,GAAT,OAAoB8B,EAAS,CAAEpD,KAAM,eAAgB2C,SAAQrB,YACzE+C,WAAY,SAAC1B,GAAD,OAAYS,EAAS,CAAEpD,KAAM,cAAe2C,eAKjDQ,CAGbI,GCjIIoB,E,kDACF,WAAYlH,GAAQ,IAAD,8BACf,cAAMA,IAKVmH,UAAY,SAACC,GAAY,IACbC,EAA2CD,EAA3CC,YAAaC,EAA8BF,EAA9BE,OAAQnC,EAAsBiC,EAAtBjC,YAAa5C,EAAS6E,EAAT7E,KAC1C,GAAK8E,IAGDA,EAAYR,cAAgBS,EAAOT,aACnCQ,EAAY/E,QAAUgF,EAAOhF,OAIjC,GAAa,SAATC,EAAJ,CAaA,IAAMgF,EAAY,EAAKvH,MAAMwH,MAAMF,EAAOT,aACpCY,EAAU,EAAKzH,MAAMwH,MAAMH,EAAYR,aAE7C,GAAIU,IAAcE,EAAS,CAEvB,IAAMC,EAAaC,MAAMC,KAAKL,EAAUM,SACxCH,EAAWI,OAAOR,EAAOhF,MAAO,GAChCoF,EAAWI,OAAOT,EAAY/E,MAAO,EAAG6C,GAExC,IAAMa,EAAO,2BACNuB,GADM,IAETM,QAASH,IAEPK,EAAQ,2BACP,EAAK/H,OADE,IAEVwH,MAAM,2BACC,EAAKxH,MAAMwH,OADb,kBAEAxB,EAAQhC,GAAKgC,MAGtB,EAAKhG,MAAMgI,YAAYD,OAGtB,CAAC,IAAD,EAEKE,EAAeN,MAAMC,KAAKL,EAAUM,SAC1CI,EAAaH,OAAOR,EAAOhF,MAAO,GAClC,IAAM4F,EAAY,2BACXX,GADW,IAEdM,QAASI,IAGPE,EAAaR,MAAMC,KAAKH,EAAQI,SACtCM,EAAWL,OAAOT,EAAY/E,MAAO,EAAG6C,GACxC,IAAMiD,EAAU,2BACTX,GADS,IAEZI,QAASM,IAGPJ,EAAQ,2BACP,EAAK/H,OADE,IAEVwH,MAAM,2BACC,EAAKxH,MAAMwH,OADb,uBAEAU,EAAalE,GAAKkE,GAFlB,cAGAE,EAAWpE,GAAKoE,GAHhB,MAMT,EAAKpI,MAAMgI,YAAYD,QA5D3B,CACI,IAAMM,EAAeV,MAAMC,KAAK,EAAK5H,MAAMsI,WAC3CD,EAAaP,OAAOR,EAAOhF,MAAO,GAClC+F,EAAaP,OAAOT,EAAY/E,MAAO,EAAG6C,GAE1C,IAAM4C,EAAQ,2BACP,EAAK/H,OADE,IAEVsI,UAAWD,IAEf,EAAKrI,MAAMgI,YAAYD,KAzBZ,EAiFnBQ,cAAgB,WACZ,EAAKxH,SAAS,CACVyH,kBAAkB,KAnFP,EAsFnBC,wBAA0B,WACtB,EAAK1H,SAAS,CACVyH,kBAAkB,KAxFP,EA2FnBE,WAAa,SAAC7E,GACV,EAAK7D,MAAM0I,WAAW7E,IA1FtB,EAAK5D,MAAQ,CACTuI,kBAAkB,GAHP,E,qDA+FT,IAAD,OACa9G,KAAK1B,MACvB,OACI,qCACI,cAAC,IAAD,CACImH,UAAWzF,KAAKyF,UADpB,SAGI,cAAC,IAAD,CACIN,YAAY,YACZ8B,UAAU,aACVpG,KAAK,OAHT,SAKK,SAAC6C,GAAD,OACG,8CAAK/B,UAAU,WACP+B,EAAS0B,gBADjB,IAEIxB,IAAKF,EAASG,SAFlB,UAIK,EAAKvF,MAAMsI,UAAUjG,KAAI,SAAC6C,EAAQ5C,GAC/B,IAAM2D,EAAO,EAAKjG,MAAMwH,MAAMtC,GACxB6B,EAAQd,EAAK4B,QAAQxF,KAAI,SAACwD,GAAD,OAAY,EAAK7F,MAAM+G,MAAMlB,MAE5D,OAAO,cAAC,EAAD,CAA2BI,KAAMA,EAAMc,MAAOA,EAAOzE,MAAOA,GAAzC4C,MAE7BE,EAAS4B,YACV,wBAAQ3D,UAAU,qCAAqCI,QAAS,EAAK8E,cAArE,+BAMhB,cAAC,EAAD,CACI/E,OAAQ9B,KAAKzB,MAAMuI,iBACnB9E,YAAahC,KAAK+G,wBAClB7E,WAAY,CAAEc,MAAO,IACrBZ,iBAAkBpC,KAAKgH,oB,GAlIfpF,aAoJboC,eAZS,SAACzF,GACrB,OAAO,eAAIA,MAGY,SAAC0F,GACxB,MAAO,CACHqC,YAAa,SAACD,GAAD,OAAcpC,EAAS,CAAEpD,KAAM,eAAgBwF,cAC5DW,WAAY,SAAC7E,GAAD,OAAY8B,EAAS,CAAEpD,KAAM,eAAgBsB,eAKlD6B,CAGbwB,G,wBC1JF,IAEe0B,EAFDC,aCAC,SAAoB5I,EAAO6I,GAEtC,QAAcC,IAAV9I,EACA,MAAO,CACH8G,MAAO,GAGPS,MAAO,CACH,SAAU,CACNxD,GAAI,SACJU,MAAO,eACPmD,QAAS,IAEb,SAAU,CACN7D,GAAI,SACJU,MAAO,eACPmD,QAAS,IAEb,SAAU,CACN7D,GAAI,SACJU,MAAO,eACPmD,QAAS,KAGjBS,UAAW,CAAC,SAAU,SAAU,WAIxC,IAAuBzE,EAejBmF,EAAgB,SAACC,GACnB,OAAOC,YAAiBD,IAG5B,OAAQH,EAAOvG,MACX,IAAK,cACD,IAAIwF,EAAWiB,EAAc/I,GAE7B,OADA8H,EAAShB,MAAM+B,EAAOlD,YAAY5B,IAAlC,eAA6C8E,EAAOlD,aAC7CmC,EAGX,IAAK,cACD,IAAIA,EAAWiB,EAAc/I,GAE7B,OADA8H,EAASP,MAAMsB,EAAO7B,YAAYjD,IAAlC,eAA6C8E,EAAO7B,aAC7Cc,EAGX,IAAK,eACD,OAAOe,EAAOf,SAClB,IAAK,eACD,IAAIvD,GAnCWX,EAmCaiF,EAAOjF,OAlChC,CACHG,GAAImF,eACJzE,MAAOb,EAAOa,MACdC,QAASd,EAAOc,UAgCZoD,EAAWiB,EAAc/I,GAI7B,OAHA8H,EAAShB,MAAMvC,EAAQR,IAAMQ,EAC7BuD,EAASP,MAAMsB,EAAO5D,QAAQ2C,QAAQuB,KAAK5E,EAAQR,IAE5C+D,EAEX,IAAK,cACD,IAAIA,EAAWiB,EAAc/I,UACtB8H,EAAShB,MAAM+B,EAAOjD,QAC7B,IAAIvD,EAAQyF,EAASP,MAAMsB,EAAO5D,QAAQ2C,QAAQwB,QAAQP,EAAOjD,QAEjE,OADAkC,EAASP,MAAMsB,EAAO5D,QAAQ2C,QAAQC,OAAOxF,EAAO,GAC7CyF,EAGX,IAAK,eACD,IAAIA,EAAWiB,EAAc/I,GACzB+F,EA5CU,SAACnC,GACnB,MAAO,CACHG,GAAImF,eACJzE,MAAOb,EAAOa,MACdmD,QAAS,IAwCKyB,CAAcR,EAAOjF,QAGnC,OAFAkE,EAASP,MAAMxB,EAAQhC,IAAMgC,EAC7B+B,EAASO,UAAUc,KAAKpD,EAAQhC,IACzB+D,EAGX,IAAK,cACD,IAAIA,EAAWiB,EAAc/I,UACtB8H,EAASP,MAAMsB,EAAO5D,QAC7B,IAAIqE,EAAYxB,EAASO,UAAUe,QAAQP,EAAO5D,QAElD,OADA6C,EAASO,UAAUR,OAAOyB,EAAW,GAC9BxB,EAGX,QACI,OAAO9H,MC3FEuJ,E,kDACjB,WAAYxJ,GAAO,IAAD,8BACd,cAAMA,IAOVyJ,wBAA0B,WACtB,EAAK1I,SAAS,CACV2I,oBAAoB,EACpBC,WAAW,EACXC,eAAe,KAZL,EAgBlBC,gBAAkB,WACd,EAAK9I,SAAS,CACV2I,oBAAoB,EACpBC,WAAW,EACXC,eAAe,KApBL,EAwBlBE,oBAAsB,WAClB,EAAK/I,SAAS,CACV2I,oBAAoB,EACpBC,WAAW,EACXC,eAAe,KA5BL,EA+BlBG,qBAAuB,WACnB,OAAI,EAAK9J,MAAMyJ,mBAEP,qCACI,uDACA,cAAC,EAAD,OAIJ,EAAKzJ,MAAM0J,UAEX,qCACI,8CACA,cAAC,EAAD,OAIJ,EAAK1J,MAAM2J,cAEX,qCACI,kDACA,cAAC,IAAD,CAAUhB,MAAOA,EAAjB,SACI,cAAC,EAAD,SAOL,mDA1DX,EAAK3I,MAAQ,CACTyJ,oBAAoB,EACpBC,WAAW,EACXC,eAAe,GALL,E,qDAiEd,OACA,qCACI,qBAAKvG,UAAU,mBAAf,SACI,+BACI,oBAAIA,UAAW3B,KAAKzB,MAAMyJ,mBAAqB,YAAc,GAAIjG,QAAS/B,KAAK+H,wBAA/E,SAAwG,sDACxG,oBAAIpG,UAAW3B,KAAKzB,MAAM0J,UAAY,YAAc,GAAIlG,QAAS/B,KAAKmI,gBAAtE,SAAuF,6CACvF,oBAAIxG,UAAW3B,KAAKzB,MAAM2J,cAAgB,YAAc,GAAInG,QAAS/B,KAAKoI,oBAA1E,SAA+F,uDAIvG,qBAAKzG,UAAU,cAAf,SACK3B,KAAKqI,gC,GA7EgBzG,IAAMb,WCW7BuH,MAff,WAEE,OACE,qBAAK3G,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,6CACA,yHAEF,cAAC,EAAD,UCAO4G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtJ,MAAK,YAAkD,IAA/CuJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhI,SAASiI,eAAe,SAM1BX,M","file":"static/js/main.bad47b06.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\n\r\nexport default class CurrencyConverter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            currencies: [\"AUD\"],\r\n            currencyFrom: \"AUD\",\r\n            currencyTo: \"AUD\",\r\n            amountFrom: 0,\r\n            amountTo: 0\r\n        }\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n\r\n        \r\n    }\r\n    componentDidMount(){\r\n        //get exchange rates on load and store\r\n        let apiAddress = \"https://api.exchangeratesapi.io/latest\";\r\n        let requestAddress = apiAddress;\r\n        Axios.get(requestAddress).then((response) => {\r\n            this.setState({\r\n                rates: response.data.rates,\r\n                baseCurrency: response.data.base,\r\n                currencies: Object.keys(response.data.rates).sort()\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let fromRate = this.state.rates[this.state.currencyFrom];\r\n        let baseValue =  this.state.amountFrom / fromRate;\r\n        if (this.state.currencyTo === this.state.baseCurrency){\r\n            this.setState({ amountTo: baseValue.toFixed(3) })\r\n        }\r\n        else{\r\n            let toRate = this.state.rates[this.state.currencyTo];\r\n            let conversion = baseValue * toRate;\r\n            this.setState({ amountTo: conversion.toFixed(3) })\r\n        }\r\n        \r\n    }\r\n\r\n    handleSelect(event) {\r\n        console.log(event.target.name, event.target.value);\r\n        this.setState({ [event.target.name]: event.target.value });\r\n\r\n    }\r\n\r\n    handleInput(event) {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>Select current currency</label><br />\r\n                <select name=\"currencyFrom\" value={this.state.currencyFrom} onChange={this.handleSelect}>\r\n                    {this.state.currencies.map((name, index) => {\r\n                        return <option key={index} value={name} >{name}</option>\r\n                    })}\r\n                </select><br />\r\n\r\n                <input type=\"number\" name=\"amountFrom\" step=\"any\" onChange={this.handleInput}/> <br />\r\n                <label>Select target currency</label> <br />\r\n                <select name=\"currencyTo\" value={this.state.currencyTo} onChange={this.handleSelect}>\r\n                    {this.state.currencies.map((name, index) => {\r\n                        return <option key={index} value={name} >{name}</option>\r\n                    })}\r\n                </select><br />\r\n\r\n                <input type=\"submit\" value=\"Convert\" onChange={this.handleInput} /><br />\r\n                <label>Converted Amount:</label> <br />\r\n                <div type=\"number\" name=\"amountFrom\" onChange={this.handleInput}>${this.state.amountTo}</div>\r\n            </form >\r\n        );\r\n    }\r\n}","import React from 'react'\r\n\r\n\r\nexport default class KeyMapper extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.onkeydown = (keyDown) => {\r\n            \r\n            keyDown.preventDefault()\r\n            this.setState({\r\n                keyPress: keyDown.code,\r\n                keyCode: keyDown.keyCode,\r\n                keyLocation: keyDown.location,\r\n                nativeKeyCode: keyDown.which\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div>\r\n                        <div className=\"panel is-info\">\r\n                            <h3 className=\"panel-heading\">Press a Key</h3>\r\n                            <table className=\"table\">\r\n                                <tr>\r\n                                    <td>KeyPress</td>\r\n                                    <td>{this.state.keyPress}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>KeyCode</td>\r\n                                    <td>{this.state.keyCode}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>KeyLocation</td>\r\n                                    <td>{this.state.keyLocation}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>KeyWhich</td>\r\n                                    <td>{this.state.nativeKeyCode}</td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                </div>\r\n                \r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Formik, Field, Form } from 'formik';\r\n\r\nexport default class LaneModal extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className={`modal ${this.props.isOpen ? \"is-active\" : \"\"}`}>\r\n                <div className=\"modal-background\" onClick={this.props.handleClose}></div>\r\n                <div className=\"modal-card\">\r\n                    <header className=\"modal-card-head\">\r\n                        <p className=\"modal-card-title\">Edit Lane</p>\r\n                    </header>\r\n                \r\n                    <Formik\r\n                        initialValues={this.props.laneValues}\r\n                        onSubmit={(values) => {\r\n                            this.props.updateLaneValues(values);\r\n                            this.props.handleClose();\r\n                            }\r\n                        }\r\n                    >\r\n                    <Form>\r\n                        <section className=\"modal-card-body\">\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                <Field id='title' type='text' name='title'/>\r\n                        </section>\r\n                        <footer>\r\n                            <button type=\"submit\" className=\"button is-success\">Save changes</button>\r\n                            <button className=\"button\" onClick={this.props.handleClose}>Cancel</button>\r\n                        </footer>\r\n                        </Form>\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Formik, Field, Form } from 'formik';\r\n\r\nexport default class CardModal extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className={`modal ${this.props.isOpen ? \"is-active\" : \"\"}`}>\r\n                <div className=\"modal-background\" onClick={this.props.handleClose}></div>\r\n                <div className=\"modal-card\">\r\n                    <header className=\"modal-card-head\">\r\n                        <p className=\"modal-card-title\">Edit Card</p>\r\n                    </header>\r\n                \r\n                    <Formik\r\n                        initialValues={this.props.cardValues}\r\n                        onSubmit={(values) => {\r\n                            this.props.updateCardValues(values);\r\n                            this.props.handleClose();\r\n                            }\r\n                        }\r\n                    >\r\n                    <Form>\r\n                        <section className=\"modal-card-body\">\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                <Field id='title' type='text' name='title'/>\r\n                                <label htmlFor=\"content\">Content</label>\r\n                                <Field id='content' as='textarea' name='content' />\r\n                        </section>\r\n                        <footer>\r\n                            <button type=\"submit\" className=\"button is-success\">Save changes</button>\r\n                            <button className=\"button\" onClick={this.props.handleClose}>Cancel</button>\r\n                        </footer>\r\n                        </Form>\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {Draggable, DraggableStateSnapshot, DraggableProvided} from 'react-beautiful-dnd';\r\nimport CardModal from './CardModal';\r\nimport { connect } from 'react-redux';\r\n\r\nclass WorkflowCard extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            showEditModal: false\r\n        }\r\n    }\r\n\r\n    handleUpdateCardValues = (values) => {\r\n        var newCard = {\r\n            ...this.props.card,\r\n            title: values.title,\r\n            content: values.content\r\n        }\r\n        this.props.updateCard(newCard)\r\n    }\r\n    handleModalOpen = () => {\r\n        this.setState({\r\n            showEditModal: true\r\n        });\r\n    }\r\n    handleModalClose = () => {\r\n        this.setState({\r\n            showEditModal: false\r\n        });\r\n    }\r\n    handleCardDelete = () => {\r\n        this.props.deleteCard(this.props.card.id, this.props.laneId)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <Draggable\r\n                    draggableId={this.props.card.id} \r\n                    index={this.props.index}\r\n                >\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                        >\r\n                            <a className=\"delete\" onClick={this.handleCardDelete}></a>\r\n                            <h3>{this.props.card.title}</h3>\r\n                            <p>{this.props.card.content}</p>\r\n                            <button className=\"button is-warning is-rounded is-small\" onClick={this.handleModalOpen}>Edit</button>\r\n                        </div>\r\n                    )}\r\n                \r\n                </Draggable>\r\n                <CardModal\r\n                    isOpen={this.state.showEditModal}\r\n                    handleClose={this.handleModalClose}\r\n                    cardValues={{ title: this.props.card.title, content: this.props.card.content }}\r\n                    updateCardValues={this.handleUpdateCardValues}\r\n                />\r\n             </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCard: (updatedCard) => dispatch({ type: 'UPDATE_CARD', updatedCard }),\r\n        deleteCard: (cardId, laneId) => dispatch({ type: 'DELETE_CARD', cardId, laneId})\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(WorkflowCard);","import React from 'react'\r\nimport { Droppable,  Draggable } from 'react-beautiful-dnd';\r\nimport LaneModal from './LaneModal';\r\nimport CardModal from './CardModal';\r\nimport WorkflowCard from './WorkflowCard';\r\nimport { connect } from 'react-redux';\r\n\r\nclass WorkflowLane extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            showCardModal: false,\r\n            showLaneModal: false\r\n        }\r\n    }\r\n\r\n    handleTitleChange = (event) => {\r\n        var newLane = {\r\n            ...this.props.lane,\r\n            ['title']: event.target.value\r\n        }\r\n        this.props.updateLane(newLane)\r\n    }\r\n\r\n    handleAddCard = () => {\r\n        this.setState({\r\n            showCardModal: true\r\n        });\r\n    }\r\n\r\n    handleCardModalClose = () => {\r\n        this.setState({\r\n            showCardModal: false\r\n        });\r\n    }\r\n    handleUpdateCardValues = (values) => {\r\n        this.props.addNewCard(this.props.lane.id, values);\r\n    }\r\n    handleEditLane = () => {\r\n        this.setState({\r\n            showLaneModal: true\r\n        });\r\n    }\r\n    handleLaneModalClose = () => {\r\n        this.setState({\r\n            showLaneModal: false\r\n        });\r\n\r\n    }\r\n    handleUpdateLaneValues = (values) => {\r\n        var newLane = {\r\n            ...this.props.lane,\r\n            title: values.title\r\n        }\r\n        this.props.updateLane(newLane)\r\n    }\r\n\r\n    handleDeleteLane = () => {\r\n        this.props.deleteLane(this.props.lane.id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Draggable\r\n                    draggableId={this.props.lane.id}\r\n                    index={this.props.index}\r\n                >\r\n                    {(provided) => (\r\n                        <div className=\"card workflow-lane\"\r\n                            {...provided.draggableProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n                            <header className=\"card-header\" {...provided.dragHandleProps}>\r\n                                <a className=\"delete\" onClick={this.handleDeleteLane}></a>\r\n                                <h3>{this.props.lane.title}</h3>\r\n                            </header>\r\n                            \r\n                            \r\n                            <Droppable\r\n                                droppableId={this.props.lane.id}\r\n                                type=\"card\"\r\n                            >\r\n                                {(provided, snapshot) => (\r\n                                    <>\r\n                                        <div className=\"cardList\"\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.droppableProps}\r\n                                        >\r\n\r\n                                            {this.props.cards.map((card, index) => <WorkflowCard key={card.id} card={card} index={index} laneId={this.props.lane.id}/>)}\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                        <button className=\"button is-info is-rounded is-small\" onClick={this.handleAddCard}>Add Card</button>\r\n                                        <button className=\"button is-warning is-rounded is-small\" onClick={this.handleEditLane}>Edit Lane</button>\r\n                                    </>\r\n                                )}\r\n\r\n                            </Droppable>\r\n                        </div>\r\n                        )\r\n                    }\r\n                </Draggable>\r\n                <CardModal\r\n                    isOpen={this.state.showCardModal}\r\n                    handleClose={this.handleCardModalClose}\r\n                    cardValues={{ title: '', content: '' }}\r\n                    updateCardValues={this.handleUpdateCardValues}\r\n                />\r\n                <LaneModal\r\n                    isOpen={this.state.showLaneModal}\r\n                    handleClose={this.handleLaneModalClose}\r\n                    laneValues={{ title: this.props.lane.title}}\r\n                    updateLaneValues={this.handleUpdateLaneValues}\r\n                />\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateLane: (updatedLane) => dispatch({ type: 'UPDATE_LANE', updatedLane}),\r\n        addNewCard: (laneId, values) => dispatch({ type: 'ADD_NEW_CARD', laneId, values}),\r\n        deleteLane: (laneId) => dispatch({ type: 'DELETE_LANE', laneId})\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(WorkflowLane);","import * as React from 'react';\r\nimport WorkflowLane from './WorkflowLane';\r\nimport LaneModal from './LaneModal';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { connect } from 'react-redux';\r\n\r\nclass WorkflowBoard extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showNewLaneModal: false\r\n        }\r\n    }\r\n    onDragEnd = (result) => {\r\n        const { destination, source, draggableId, type } = result;\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        if (destination.droppableId === source.droppableId &&\r\n            destination.index === source.index) {\r\n            return;\r\n        }\r\n\r\n        if (type === 'lane') {\r\n            const newLaneOrder = Array.from(this.props.laneOrder);\r\n            newLaneOrder.splice(source.index, 1);\r\n            newLaneOrder.splice(destination.index, 0, draggableId);\r\n\r\n            const newState = {\r\n                ...this.props,\r\n                laneOrder: newLaneOrder\r\n            };\r\n            this.props.updateState(newState)\r\n            return\r\n        }\r\n        \r\n        const startLane = this.props.lanes[source.droppableId];\r\n        const endLane = this.props.lanes[destination.droppableId]\r\n\r\n        if (startLane === endLane) {\r\n            //moving in the same lane\r\n            const newCardIds = Array.from(startLane.cardIds);\r\n            newCardIds.splice(source.index, 1);\r\n            newCardIds.splice(destination.index, 0, draggableId);\r\n\r\n            const newLane = {\r\n                ...startLane,\r\n                cardIds: newCardIds\r\n            };\r\n            const newState = {\r\n                ...this.props,\r\n                lanes: {\r\n                    ...this.props.lanes,\r\n                    [newLane.id]: newLane\r\n                }\r\n            };\r\n            this.props.updateState(newState);\r\n            //call server here\r\n        }\r\n        else {\r\n            //moving between lanes\r\n            const startLaneIds = Array.from(startLane.cardIds)\r\n            startLaneIds.splice(source.index, 1);\r\n            const newStartLane = {\r\n                ...startLane,\r\n                cardIds: startLaneIds\r\n            };\r\n\r\n            const endLaneIds = Array.from(endLane.cardIds);\r\n            endLaneIds.splice(destination.index, 0, draggableId);\r\n            const newEndLane = {\r\n                ...endLane,\r\n                cardIds: endLaneIds\r\n            };\r\n\r\n            const newState = {\r\n                ...this.props,\r\n                lanes: {\r\n                    ...this.props.lanes,\r\n                    [newStartLane.id]: newStartLane,\r\n                    [newEndLane.id]: newEndLane\r\n                }\r\n            };\r\n            this.props.updateState(newState);\r\n            //call server here\r\n        };\r\n        \r\n    }\r\n    handleAddLane = () => {\r\n        this.setState({\r\n            showNewLaneModal: true\r\n        });\r\n    }\r\n    handleNewLaneModalClose = () => {\r\n        this.setState({\r\n            showNewLaneModal: false\r\n        });\r\n    }\r\n    addNewLane = (values) => {\r\n        this.props.addNewLane(values);\r\n    }\r\n\r\n    render() {\r\n        const testState = this.props;\r\n        return (\r\n            <>\r\n                <DragDropContext\r\n                    onDragEnd={this.onDragEnd}\r\n                >\r\n                    <Droppable\r\n                        droppableId=\"all-lanes\"\r\n                        direction=\"horizontal\"\r\n                        type=\"lane\"\r\n                    >\r\n                        {(provided) => (\r\n                            <div className=\"columns\"\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                            >\r\n                                {this.props.laneOrder.map((laneId, index) => {\r\n                                    const lane = this.props.lanes[laneId];\r\n                                    const cards = lane.cardIds.map((cardId) => this.props.cards[cardId])\r\n\r\n                                    return <WorkflowLane key={laneId} lane={lane} cards={cards} index={index}/>\r\n                                })}\r\n                                {provided.placeholder}\r\n                                <button className=\"button is-info is-rounded is-small\" onClick={this.handleAddLane}>Add Lane</button>\r\n                            </div>\r\n                        )}\r\n                         \r\n                    </Droppable>\r\n                </DragDropContext>\r\n                <LaneModal\r\n                    isOpen={this.state.showNewLaneModal}\r\n                    handleClose={this.handleNewLaneModalClose}\r\n                    laneValues={{ title: '' }}\r\n                    updateLaneValues={this.addNewLane}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {...state}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateState: (newState) => dispatch({ type: 'UPDATE_STATE', newState } ),\r\n        addNewLane: (values) => dispatch({ type: 'ADD_NEW_LANE', values })\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(WorkflowBoard);","import { createStore } from 'redux'\r\nimport appReducer from './reducers'\r\n\r\nconst store = createStore(appReducer)\r\n\r\nexport default store","import { v4 as uuidv4 } from 'uuid';\r\nimport * as lodash from 'lodash';\r\n// Use the initialState as a default value\r\nexport default function appReducer(state, action) {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            cards: {\r\n                \r\n            },\r\n            lanes: {\r\n                'lane-1': {\r\n                    id: 'lane-1',\r\n                    title: 'Lane 1 title',\r\n                    cardIds: []\r\n                },\r\n                'lane-2': {\r\n                    id: 'lane-2',\r\n                    title: 'Lane 2 title',\r\n                    cardIds: []\r\n                },\r\n                'lane-3': {\r\n                    id: 'lane-3',\r\n                    title: 'Lane 3 title',\r\n                    cardIds: []\r\n                }\r\n            },\r\n            laneOrder: ['lane-1', 'lane-2', 'lane-3']\r\n        }\r\n    }\r\n\r\n    const createNewCard = (values) => {\r\n        return {\r\n            id: uuidv4(),\r\n            title: values.title,\r\n            content: values.content\r\n        }\r\n    }\r\n\r\n    const createNewLane = (values) => {\r\n        return {\r\n            id: uuidv4(),\r\n            title: values.title,\r\n            cardIds: []\r\n        }\r\n    }\r\n    const deepCopyState = (originalState) => {\r\n        return lodash.cloneDeep(originalState);\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'UPDATE_CARD':{\r\n            let newState = deepCopyState(state)\r\n            newState.cards[action.updatedCard.id] = { ...action.updatedCard }\r\n            return newState;\r\n        }\r\n            \r\n        case 'UPDATE_LANE':{\r\n            let newState = deepCopyState(state)\r\n            newState.lanes[action.updatedLane.id] = { ...action.updatedLane }\r\n            return newState\r\n        }\r\n            \r\n        case 'UPDATE_STATE':\r\n            return action.newState\r\n        case 'ADD_NEW_CARD':{\r\n            let newCard = createNewCard(action.values);\r\n            let newState = deepCopyState(state)\r\n            newState.cards[newCard.id] = newCard;\r\n            newState.lanes[action.laneId].cardIds.push(newCard.id)\r\n            //saveToServer(newState);\r\n            return newState;\r\n        }\r\n        case 'DELETE_CARD':{\r\n            let newState = deepCopyState(state)\r\n            delete newState.cards[action.cardId];\r\n            let index = newState.lanes[action.laneId].cardIds.indexOf(action.cardId);\r\n            newState.lanes[action.laneId].cardIds.splice(index, 1);\r\n            return newState;\r\n        }\r\n            \r\n        case 'ADD_NEW_LANE':{\r\n            let newState = deepCopyState(state)\r\n            let newLane = createNewLane(action.values)\r\n            newState.lanes[newLane.id] = newLane;\r\n            newState.laneOrder.push(newLane.id);\r\n            return newState;\r\n        }\r\n            \r\n        case 'DELETE_LANE':{\r\n            let newState = deepCopyState(state)\r\n            delete newState.lanes[action.laneId]\r\n            let laneIndex = newState.laneOrder.indexOf(action.laneId);\r\n            newState.laneOrder.splice(laneIndex, 1);\r\n            return newState\r\n        }\r\n            \r\n        default:\r\n            return state;\r\n        }\r\n\r\n}","import React from 'react';\r\nimport CurrencyConverter from './CurrencyConverter';\r\nimport KeyMapper from './KeyMapper';\r\nimport WorkflowBoard from './WorkflowBoard/WorkflowBoard';\r\nimport { Provider } from 'react-redux'\r\nimport store from './Redux/store'\r\n\r\nexport default class Projects extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currencyCalculator: false,\r\n            keyMapper: false,\r\n            workFlowBoard: false\r\n        }\r\n    }\r\n    handleCurrencyCalulator = () => {\r\n        this.setState({\r\n            currencyCalculator: true,\r\n            keyMapper: false,\r\n            workFlowBoard: false\r\n        })\r\n    }\r\n\r\n    handleKeyMapper = () => {\r\n        this.setState({\r\n            currencyCalculator: false,\r\n            keyMapper: true,\r\n            workFlowBoard: false\r\n        })\r\n    }\r\n\r\n    handleWorkFlowBoard = () => {\r\n        this.setState({\r\n            currencyCalculator: false,\r\n            keyMapper: false,\r\n            workFlowBoard: true\r\n        })\r\n    }\r\n    displayActiveProject = () => {\r\n        if (this.state.currencyCalculator){\r\n            return (\r\n                <>\r\n                    <h1>CurrencyCalculator On</h1>\r\n                    <CurrencyConverter/>\r\n                </>\r\n            )\r\n        }\r\n        else if(this.state.keyMapper){\r\n            return (\r\n                <>\r\n                    <h1>KeyMapper On</h1>\r\n                    <KeyMapper/>\r\n                </>\r\n            )\r\n        }\r\n        else if(this.state.workFlowBoard){\r\n            return (\r\n                <>\r\n                    <h1>WorkFlowBoard On</h1>\r\n                    <Provider store={store}>\r\n                        <WorkflowBoard/>\r\n                    </Provider>\r\n                    \r\n                </>\r\n                )\r\n        }\r\n        else{\r\n            return <h1>Nothing selected</h1>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <div className=\"tabs is-centered\">\r\n                <ul>\r\n                    <li className={this.state.currencyCalculator ? \"is-active\" : \"\"} onClick={this.handleCurrencyCalulator}><a>Currency Calculator</a></li>\r\n                    <li className={this.state.keyMapper ? \"is-active\" : \"\"} onClick={this.handleKeyMapper}><a>Key Mapper</a></li>\r\n                    <li className={this.state.workFlowBoard ? \"is-active\" : \"\"} onClick={this.handleWorkFlowBoard}><a>Work Flow Board</a></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"is-centered\">\r\n                {this.displayActiveProject()}\r\n            </div>\r\n            \r\n        </>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport Projects from './Components/Projects'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"welcome-content mt-5\">\n          <h1>Hello World</h1>\n          <h2>Welcome to by portfolio site.  Please see below some client side examples of React. </h2>\n        </div>\n        <Projects/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}